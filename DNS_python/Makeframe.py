# coding:utf-8
# 成帧模块，形成对外围权威服务器的询问帧
import socket

'''
	 * DNS Header
	    0  1  2  3  4  5  6  7  0  1  2  3  4  5  6  7
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                      ID                       |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |QR|  opcode   |AA|TC|RD|RA|   Z    |   RCODE   |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                    QDCOUNT                    |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                    ANCOUNT                    |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                    NSCOUNT                    |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                    ARCOUNT                    |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+---
	  
	  
	  Question 查询字段
		0  1  2  3  4  5  6  7  0  1  2  3  4  5  6  7
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                     ...                       |
	  |                    QNAME                      |
	  |                     ...                       |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                    QTYPE                      |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
	  |                    QCLASS                     |
	  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
'''


def make(re_ip, msg):
    # re_ip是查询到的ip地址，msg是原报文
    temp_list = []
    for ch in msg:  # 先将msg中各个字节全转换为int用temp_list存储，修改完成后用bytes([])转回字节
        temp_list.append(ch)

    temp_list.append([0, 0])
    # QR：0表示查询报，1表示响应报。
    # RA：递归可用(Recursion Available),如果名字服务器支持递归查询，则在响应中该比特置为1
    # RD: 期望递归(Recursion desired)
    temp_list[2] |= 1 << 7  # 将QR置为1
    temp_list[2] = temp_list[2] | 1  # 将RA置为1
    temp_list[3] = temp_list[3] | 1 << 7  # 将RD置为1

    # 检索结果为ip地址0.0.0.0，则向客户端返回“域名不存在”的报错消息（不良网站拦截功能）
    # 返回域名不存在的报错通过将RCODE: 响应码(Response coded)置为3实现
    if re_ip == "0.0.0.0":
        temp_list[3] = temp_list[3] | 3  # 值为3表示名字差错。从权威名字服务器返回，表示在查询中指定域名不存在

    # 设置问题数1，资源记录数1，授权资源记录数0，额外资源记录数0
    temp_list[4:12] = [0, 1, 0, 1, 0, 0, 0, 0]
    # ['\xc0','\x0c','\x00','\x01','\x00','\x01','\x00','\x00','\x01','\x51','\x80','\x04']
    # 依次是域名、类型、类、生存时间TTL（设为两天）、资源数据长度
    temp_list = temp_list + [192, 12, 0, 1, 0, 1, 0, 1, 81, 128, 0, 4]

    # 将点分格式的IP地址四个部分用int取出来
    ip = re_ip.split('.')
    for i in range(len(ip)):
        ip[i] = int(ip[i])
    temp_list = temp_list + ip

    re_msg = bytes(temp_list)
    return re_msg
